[tool.poetry]
name = "ubuntu-voice-to-text"
version = "1.0.0"
description = "A voice-to-text application for Ubuntu using speech recognition"
authors = ["Volodymyr Shcherbyna "]
readme = "README.md"
packages = [{include = "voice_typing"}]

[tool.poetry.dependencies]
python = "^3.8.1"
vosk = "^0.3.45"
keyboard = "^0.13.5"
pynput = "^1.7.6"
pystray = "^0.24.0"
pillow = "^9.4.0"
sounddevice = "^0.4.6"
openai = "^0.27.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
pytest-cov = "^4.0.0"
coverage = "^7.0.0"
flake8 = "^6.0.0"
black = "^23.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=.",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--strict-markers",
    "-v",
]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "venv/*",
    "*/venv/*",
    "*/.venv/*",
    "*/site-packages/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = [
    "E203",  # whitespace before ':'
    "W503",  # line break before binary operator
]
exclude = [
    ".git",
    "__pycache__",
    "*.egg-info",
    ".venv",
    "venv",
    "build",
    "dist",
]